// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`üåç App: renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "height": 1334,
        "width": 750,
      },
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <RNSScreenContainer
                          onLayout={[Function]}
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        >
                          <RNSScreen
                            activityState={2}
                            forwardedRef={[Function]}
                            pointerEvents="box-none"
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                            />
                            <View
                              accessibilityElementsHidden={false}
                              closing={false}
                              gestureVelocityImpact={0.3}
                              importantForAccessibility="auto"
                              onClose={[Function]}
                              onGestureBegin={[Function]}
                              onGestureCanceled={[Function]}
                              onGestureEnd={[Function]}
                              onOpen={[Function]}
                              onTransition={[Function]}
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "overflow": undefined,
                                  },
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                ]
                              }
                              transitionSpec={
                                Object {
                                  "close": Object {
                                    "animation": "spring",
                                    "config": Object {
                                      "damping": 500,
                                      "mass": 3,
                                      "overshootClamping": true,
                                      "restDisplacementThreshold": 10,
                                      "restSpeedThreshold": 10,
                                      "stiffness": 1000,
                                    },
                                  },
                                  "open": Object {
                                    "animation": "spring",
                                    "config": Object {
                                      "damping": 500,
                                      "mass": 3,
                                      "overshootClamping": true,
                                      "restDisplacementThreshold": 10,
                                      "restSpeedThreshold": 10,
                                      "stiffness": 1000,
                                    },
                                  },
                                }
                              }
                            >
                              <View
                                needsOffscreenAlphaCompositing={false}
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  collapsable={false}
                                  forwardedRef={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  style={
                                    Object {
                                      "flex": 1,
                                      "transform": Array [
                                        Object {
                                          "translateX": 0,
                                        },
                                        Object {
                                          "translateX": 0,
                                        },
                                      ],
                                    }
                                  }
                                >
                                  <View
                                    pointerEvents="none"
                                    style={
                                      Object {
                                        "backgroundColor": "rgb(242, 242, 242)",
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "shadowColor": "#000",
                                        "shadowOffset": Object {
                                          "height": 1,
                                          "width": -1,
                                        },
                                        "shadowOpacity": 0.3,
                                        "shadowRadius": 5,
                                        "top": 0,
                                        "width": 3,
                                      }
                                    }
                                  />
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "overflow": "hidden",
                                        },
                                        Array [
                                          Object {
                                            "backgroundColor": "rgb(242, 242, 242)",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "flex": 1,
                                          "flexDirection": "column-reverse",
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "height": 1334,
                                              "justifyContent": "space-around",
                                              "width": 750,
                                            }
                                          }
                                          testID="Login"
                                        >
                                          <View
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "justifyContent": "center",
                                              }
                                            }
                                          >
                                            <Image
                                              source={
                                                Object {
                                                  "testUri": "../../../src/assets/logo.png",
                                                }
                                              }
                                              style={
                                                Object {
                                                  "borderRadius": 100,
                                                  "height": 200,
                                                  "marginBottom": 49.285714285714285,
                                                  "width": 200,
                                                }
                                              }
                                              testID="Login.Logo"
                                            />
                                            <Text
                                              selectable={true}
                                              style={
                                                Array [
                                                  Object {
                                                    "fontFamily": "NotoSansSC-Bold",
                                                    "fontSize": 48,
                                                    "letterSpacing": -0.5,
                                                    "lineHeight": 29,
                                                  },
                                                  Object {
                                                    "fontSize": 48,
                                                  },
                                                  Object {},
                                                  Object {},
                                                  Object {},
                                                  Object {
                                                    "color": "#000000",
                                                  },
                                                ]
                                              }
                                            >
                                              unknown
                                            </Text>
                                          </View>
                                          <View
                                            accessible={true}
                                            collapsable={false}
                                            focusable={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            style={
                                              Array [
                                                Object {
                                                  "alignItems": "center",
                                                  "borderWidth": 2,
                                                  "height": 60,
                                                  "justifyContent": "center",
                                                  "paddingHorizontal": 50,
                                                  "paddingVertical": 8.214285714285714,
                                                },
                                                Object {
                                                  "backgroundColor": "#e20e17",
                                                  "borderColor": "transparent",
                                                  "borderRadius": 8,
                                                  "opacity": 1,
                                                },
                                                undefined,
                                              ]
                                            }
                                            testID="Login.Button"
                                          >
                                            <Text
                                              numberOfLines={2}
                                              selectable={true}
                                              style={
                                                Array [
                                                  Object {
                                                    "fontFamily": "NotoSansSC-Medium",
                                                    "fontSize": 28,
                                                    "letterSpacing": -0.3,
                                                    "lineHeight": 16,
                                                  },
                                                  Object {
                                                    "fontSize": 28,
                                                  },
                                                  Array [
                                                    Object {
                                                      "fontSize": 32,
                                                      "lineHeight": 20,
                                                      "textAlign": "center",
                                                    },
                                                    undefined,
                                                  ],
                                                  Object {
                                                    "fontFamily": "NotoSansSC-Bold",
                                                  },
                                                  Object {},
                                                  Object {
                                                    "color": "white",
                                                  },
                                                ]
                                              }
                                            >
                                              Log in
                                            </Text>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </RNSScreen>
                        </RNSScreenContainer>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </RNCSafeAreaProvider>
  </View>
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
        "zIndex": 0,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>
</View>
`;
